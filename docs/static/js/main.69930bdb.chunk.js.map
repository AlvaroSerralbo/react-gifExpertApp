{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MA0CeA,EAtCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAGpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCSLO,EAVK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE/B,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCsBFO,EAzBC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAGhB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPa,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEHxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAK3B,CAAEpB,IAEEqB,EDlB4BK,CAAc1B,GAAlCa,EAAf,EAAQN,KAAea,EAAvB,EAAuBA,QAEvB,OACI,qCACI,oBAAIJ,UAAU,kDAAd,SAAkEhB,IAEhEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aEevBgB,EA5Ba,WAIxB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWe,KAAM,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCflC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.69930bdb.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport Proptypes from 'prop-types';\n\nconst AddCategory = ( { setCategories } ) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( categories => [inputValue, ...categories] );\n            setInputValue('');\n        }\n        // console.log('Submit hecho');\n    }\n\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n\n    setCategories : Proptypes.func.isRequired\n\n}\n\n\nexport default AddCategory;","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=WMLrLD4Za4UNnWuchuG9G0pG7VIhkhaD&limit=10`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id : img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url\n        }\n    } )\n\n    return gifs;\n\n}","import React from 'react';\n\nconst GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from './hooks/useFetchGifs';\nimport GifGridItem from './components/GifGridItem';\n\nconst GifGrid = ( { category } ) => {\n    \n    // 2 puntos para renombrar el elemento destructurado, se llama data pero lo llamamos images dentro de este component\n    const { data : images, loading } = useFetchGifs( category ); \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn animate__slow\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map ( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\n\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data : [],\n        loading : true\n    });\n\n    useEffect( () => {\n            \n            getGifs( category )\n                .then( imgs => {\n                    setState({\n                        data : imgs,\n                        loading : false\n                    })\n                } )\n\n\n    }, [ category ])\n\n    return state;  // { data : [], loading : true }\n    \n}\n","import React, { useState } from 'react'\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    // HOOK\n\n    const [categories, setCategories] = useState(['Atleti']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map ( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category } \n                        />\n                    ))\n                }\n            </ol>\n\n\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}